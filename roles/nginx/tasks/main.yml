---
- name: Install nginx
  xbps: pkg=nginx state=present
  tags: nginx

- name: Configure nginx
  copy: src=nginx.conf dest=/etc/nginx/nginx.conf owner=root group=root mode=0644
  notify:
    - nginx
  tags: nginx

- name: Create servers.d directory
  file: path=/etc/nginx/servers.d owner=root group=root mode=0755 state=directory
  notify:
    - nginx
  tags:
    - nginx

- name: Create SSL directory
  file: path=/etc/nginx/ssl owner=root group=root mode=0755 state=directory
  notify:
    - nginx
  tags:
    - nginx

- name: Check for presence of ferm.d
  stat: path=/etc/ferm.d
  register: ferm_d_present
  tags: ferm

- name: Install nginx rules
  template: src=nginx_ferm.conf.j2 dest=/etc/ferm.d/nginx.conf owner=root group=root mode=0644
  when: ferm_d_present.stat.exists == true
  notify:
    - ferm
  tags:
    - nginx
    - ferm

- name: Configure nginx servers
  template: src=server.conf.j2 dest=/etc/nginx/servers.d/{{ item.key }}.conf owner=root group=root mode=0644
  with_dict: "{{ nginx_servers }}"
  loop_control:
    label: "{{ item.key }}"
  notify:
    - nginx
  tags:
    - nginx

- name: Make locations directories
  file: path=/etc/nginx/servers.d/{{ item.key }}.d state=directory owner=root group=root mode=0755
  with_dict: "{{ nginx_servers }}"
  loop_control:
    label: "{{ item.key }}"
  notify:
    - nginx
  tags:
    - nginx

- name: Make site directories
  file: path=/srv/{{ item.key }} state=directory owner=root group=root mode=0755
  with_dict: "{{ nginx_servers }}"
  loop_control:
    label: "{{ item.key }}"
  notify:
    - nginx
  tags:
    - nginx

- name: Create SSL site directories
  file: path=/etc/nginx/ssl/{{ item.key }} state=directory owner=root group=nginx mode=0750
  with_dict: "{{ nginx_servers }}"
  loop_control:
    label: "{{ item.key }}"
  when: "{{ item.value.https }}"
  notify:
    - nginx
  tags:
    - nginx

- name: Copy SSL site assets
  copy: src={{ item.value.ssl_assets }} path=/etc/ssl/{{ item.key }} owner=root group=nginx mode=0750
  with_dict: "{{ nginx_servers }}"
  loop_control:
    label: "{{ item.key }}"
  when: "{{ item.value.ssl_assets is defined }}"
  notify:
    - nginx
  tags:
    - nginx

- name: Enable nginx at startup
  file: src=/etc/sv/nginx dest=/var/service/nginx state=link
  tags: nginx
